#!/usr/bin/env python3
from pylib import *

#------------------------------------------------------------------
#inputs
#------------------------------------------------------------------
code='run.schism' #submission script
wtime=72 #duration (hrs) for running this scripts

if len(sys.argv)>=2: code=sys.argv[1]
#------------------------------------------------------------------
#compile combine_hotstart
#------------------------------------------------------------------
ccode='combine_hotstart7'
if not fexist("./outputs/{}".format(ccode)): command_outputs('cd outputs; cmake_schism {}'.format(ccode))
bdir=os.path.abspath('.'); t0=time.time() #current dir
scrout='levante.out'

#------------------------------------------------------------------
#do hotstart
#------------------------------------------------------------------
ihs=[-1,]
while (time.time()-t0)<wtime*3600: 
    if fexist('./job.done'): sys.exit('stop hotstart run')
    #get schism job status 
    istat=0
    sout=[i.strip() for i in command_outputs('squeue -u g260135').stdout.split('\n')[1:] if i.strip()!='']
    for line in sout:
        wdir=''
        #get job id and related info
        pid=line.strip().split()[0]
        pinfo=[i.strip() for i in command_outputs('scontrol show jobid -dd {}'.format(pid)).stdout.split('\n')]
        for pline in pinfo:
            if pline.startswith('WorkDir'): wdir=pline.split('=')[1].strip()
            if pline.startswith('JobState'): sline=pline[:] 
        if (wdir==bdir) and (('RUNNING' in sline) or ('PENDING' in sline)): istat=1
    
    #combine hotstart, and setup new run
    if istat==0:
       #find hotstart number,and combine hostart, setup run
       ih=max([*[int(i.replace('.','_').split('_')[2]) for i in os.listdir('{}/outputs'.format(bdir)) if i.startswith('hotstart_000000')],0])
       hname="./outputs/hotstart_it={}.nc".format(ih) 
       if ih!=0 and (not fexist(hname)):
          #save previous hotstart file
          hid=max([*[int(i.split('.')[2]) for i in os.listdir(bdir) if i.startswith('hotstart.nc.')],0])
          if fexist('hotstart.nc'): os.rename('hotstart.nc','hotstart.nc.{}'.format(hid+1))

          #combine new hotstart
          command_outputs('cd {}/outputs; ./{} -i {}'.format(bdir,ccode,ih)); os.symlink(hname,'hotstart.nc')
          while(not fexist(hname)): time.sleep(1) 
          change_schism_param('param.nml','ihot','2')

       #submit hotstart run
       if ihs[-1]==ih: sys.exit('run should be finished') 
       command_outputs('./{}'.format(code)); ihs.append(ih)

    time.sleep(10)
