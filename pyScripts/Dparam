#!/usr/bin/env python3
#show difference between SCHISM param.in files
# usage: Dparam.py param.in_1 param.in_2
#        Dparam.py -c param.in_1 param.in_2 (only show common varibles all files have)
#        Dparam.py -d param.in_1 param.in_2 (only show different varibles that are missing in some files)
#        Dparam.py -e param.in_1 param.in_2 (only show different varibles that are missing in some files,but sorted)

#import os, sys
#from read_schism_file import read_schism_param
from pylib import *

flagd=0;
if len(sys.argv)==1:
   files=['param.nml']
else:
   files=[];
   for vi in sys.argv[1:]:
      if vi[0]!='-':
         files.append(vi)
      elif vi=='-c':
         flagd=1
      elif vi=='-d':
         flagd=2
      elif vi=='-e':
         flagd=3
      elif vi=='-h':
         print('''
               1. Dparam f1.nml f2.nml
               2. Dparam -c f1.nml f2.nml (common variables)
               3. Dparam -d f1.nml f2.nml (missing variables)
               4. Dparam -e f1.nml f2.nml (sorted missing variables)
               '''); sys.exit()

Par=[]; Key=[]; Val=[];
for i,fname in enumerate(files):
   if 'yaml' in fname:
      Pi=read_yaml(fname)
   else:
      Pi=read_schism_param(fname,fmt=1)
   Par.append(Pi)    
   Key.append(Pi.keys())    
   Val.append(Pi.values())    
   if i==0:
      AKey=set(Key[i])
   else:
      [AKey.add(ki) for ki in Key[i]]

print("{:20s}:    ".format('Parameters')+', '.join("{:10s}".format(vi) for vi in files))
AKey=sorted(list(AKey)); lines=[]; vs=[]; slines=[]
for ki in AKey:
    v=[p[ki] if (ki in k) else 'N/A' for k, p in zip(Key,Par)]  
    v=[str(i) if isinstance(i,list) else i for i in v]
    if len(unique(v))!=1:
       line="{:20s}:    ".format(ki)+', '.join("{:10s}".format(str(vi)) for vi in v)
       if flagd==1 and ('N/A' in v): continue
       if (flagd in [2,3]) and ('N/A' not in v): continue
       lines.append(line); vs.append(v)
if flagd==3: [[slines.append(i) for i,v in zip(lines,vs) if v[n]=='N/A'] for n,k in enumerate(files)]; lines=slines   #sort comparison
print('\n'.join(lines)) #outputs difference

